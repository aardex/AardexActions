name: Azure deploy Docker
description: Build & Deploy a Docker application to Azure Container Apps

inputs:
  image-name:
    required: true
    description: "Name of the Docker image"
  version:
    required: false
    description: "Version tag for the Docker image"
    default: 'latest'
  github-token:
    required: true
    description: "GitHub token for authentication"
  azure-credentials:
    required: true
    description: "Azure credentials for authentication"
  acr-login-server:
    required: true
    description: "Azure Container Server Name"
  acr-username:
    required: true
    description: "Azure Container Registry Username"
  acr-password:
    required: true
    description: "Azure Container Registry Password"
  docker-directory:
    required: false
    default: 'docker'
    description: "Path to the Dockerfile"
  platforms:
    required: false
    default: 'linux/amd64'
    description: "Comma-separated list of target platforms for multi-arch build"
  skip-check:
    required: false
    default: 'false'
    description: "Skip vulnerability check"

runs:
  using: composite
  steps:
    - name: Login to Azure Container Registry
      uses: azure/docker-login@v2
      with:
        login-server: ${{ inputs.acr-login-server }}
        username: ${{ inputs.acr-username }}
        password: ${{ inputs.acr-password }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image (multi-arch)
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ${{ inputs.docker-directory }}/Dockerfile
        push: true
        platforms: ${{ inputs.platforms }}
        tags: |
          ${{ inputs.acr-login-server }}/${{ inputs.image-name }}:${{ inputs.version }}
          ${{ inputs.acr-login-server }}/${{ inputs.image-name }}:latest
        cache-from: type=registry,ref=${{ inputs.acr-login-server }}/${{ inputs.image-name }}:buildcache
        cache-to: type=registry,ref=${{ inputs.acr-login-server }}/${{ inputs.image-name }}:buildcache,mode=max
        build-args: |
          NUGET_PAT=${{ inputs.github-token }}

    - name: Scan Docker image for vulnerabilities
      if: ${{ inputs.skip-check != 'true' }}
      uses: aquasecurity/trivy-action@0.28.0
      with:
        image-ref: ${{ inputs.acr-login-server }}/${{ inputs.image-name }}:${{ inputs.version }}
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH'