name: Deploy Docker to Container App
description: Build & Deploy a Docker application to Azure Container Apps

inputs:
  environment:
    required: true
    description: "Target environment for deployment"
  azure-environment:
    required: true
    description: "Azure environment to use"
  app-name:
    required: true
    description: "Name of the Azure Container App"
  image-name:
    required: true
    description: "Name of the Docker image"
  version:
    required: false
    description: "Version tag for the Docker image"
    default: 'latest'
  config-file-path:
    required: false
    default: ''
    description: "Path to configuration file. Only required for .Net projects."
  github-token:
    required: true
    description: "GitHub token for authentication"
  azure-credentials:
    required: true
    description: "Azure credentials for authentication"
  acr-registry:
    required: true
    description: "Azure Container Registry name"
  acr-username:
    required: true
    description: "Azure Container Registry Username"
  acr-password:
    required: true
    description: "Azure Container Registry Password"
  resource-group:
    required: true
    description: "Azure Resource Group name"
  dockerfile-path:
    required: false
    default: '.'
    description: "Path to the Dockerfile"
  platforms:
    required: false
    default: 'linux/amd64,linux/arm64'
    description: "Comma-separated list of target platforms for multi-arch build"

runs:
  using: composite
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ inputs.github-token }}

    - name: Checkout AardexActions
      uses: actions/checkout@v4
      with:
        ref: main
        repository: aardex/AardexActions
        token: ${{ inputs.github-token }}
        path: AardexActions

    - name: Set up Python 3.x
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install python dependencies
      if: ${{ inputs.config-file-path != '' }}
      shell: bash
      run: pip install -r AardexActions/scripts/requirements.txt

    - name: Setup config
      if: ${{ inputs.config-file-path != '' }}
      shell: bash
      run: |
        python3 AardexActions/scripts/azure/update-config.py --token ${{ inputs.github-token }} --repo ${{ github.repository }} --repo-env ${{ inputs.environment }} --config-path ${{ inputs.config-file-path }}

    - name: Login to Azure Container Registry
      uses: azure/docker-login@v2
      with:
        login-server: ${{ inputs.acr-registry }}
        username: ${{ inputs.acr-username }}
        password: ${{ inputs.acr-password }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image (multi-arch)
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ${{ inputs.dockerfile-path }}/Dockerfile
        push: true
        platforms: ${{ inputs.platforms }}
        tags: |
          ${{ inputs.acr-registry }}/${{ inputs.image-name }}:${{ inputs.version }}
          ${{ inputs.acr-registry }}/${{ inputs.image-name }}:latest
        cache-from: type=registry,ref=${{ inputs.acr-registry }}/${{ inputs.image-name }}:buildcache
        cache-to: type=registry,ref=${{ inputs.acr-registry }}/${{ inputs.image-name }}:buildcache,mode=max
        build-args: |
          NUGET_PAT=${{ inputs.github-token }}

    - name: Scan Docker image for vulnerabilities
      uses: aquasecurity/trivy-action@0.28.0
      with:
        image-ref: ${{ inputs.acr-registry }}/${{ inputs.image-name }}:${{ inputs.version }}
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH'

    - name: Login to Azure
      uses: azure/login@v2
      with:
        creds: ${{ inputs.azure-credentials }}

    - name: Deploy to Azure Container Apps
      shell: bash
      run: |
        az config set extension.use_dynamic_install=yes_without_prompt
        az containerapp update \
          --name ${{ inputs.app-name }}-${{ inputs.azure-environment }} \
          --resource-group ${{ inputs.resource-group }} \
          --image ${{ inputs.acr-registry }}/${{ inputs.image-name }}:${{ inputs.version }}