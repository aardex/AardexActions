name: Publish nugVersion
description: Increment and publish a release version of a nuget

inputs:
  type:
    required: true
    description: "Type of version to publish"
  version:
    required: false
    description: "Version to publish. Used only when type is manual"
  github-token:
    required: true
    description: "GitHub token for authentication"

runs:
  using: composite
  steps:
    - name: Set environment variables
      id: setup_vars
      shell: bash
      run: |
        echo "AARDEX_ACTIONS_PATH=AardexActions" >> $GITHUB_OUTPUT
        echo "AARDEX_ACTIONS_REPO=aardex/AardexActions" >> $GITHUB_OUTPUT
        echo "AARDEX_ACTIONS_BRANCH=main" >> $GITHUB_OUTPUT

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ inputs.github-token }}

    - name: Checkout AardexActions
      uses: actions/checkout@v4
      with:
#        TODO QTU
        ref: features/INFRA-237
        repository: aardex/AardexActions
        token: ${{ inputs.github-token }}
        path: AardexActions

    - name: Set up Python 3.x
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Determine version
      id: determine_version
      shell: bash
      run: |
        if [[ "${{ inputs.type }}" == "alpha" ]]; then
          version=$(python3 ${{ steps.setup_vars.outputs.AARDEX_ACTIONS_PATH }}/scripts/nuget/generate-version.py alpha --branch "${{ github.ref }}")
        elif [[ "${{ inputs.type }}" == "release-candidate" ]]; then
          version=$(python3 ${{ steps.setup_vars.outputs.AARDEX_ACTIONS_PATH }}/scripts/nuget/generate-version.py rc)
        elif [[ "${{ inputs.type }}" == "release" ]]; then
          version=$(python3 ${{ steps.setup_vars.outputs.AARDEX_ACTIONS_PATH }}/scripts/nuget/generate-version.py release)
        elif [[ "${{ inputs.type }}" == "manual" ]]; then
          version=${{ inputs.version }}
        fi
        echo "version=$version" >> $GITHUB_OUTPUT

    - name: Update package version
      shell: bash
      run: python3 AardexActions/scripts/nuget/update-version.py --new-version ${{ steps.determine_version.outputs.version }}

    - name: Commit Changes
      uses: aardex/AardexActions/github-commit-push@main
      with:
        message: Upgrate to ${{ steps.determine_version.outputs.version }}
        github-token: ${{ inputs.github-token }}

    - name: Create Release
      uses: aardex/AardexActions/github-create-tag-release@main
      with:
        version: ${{ steps.determine_version.outputs.version }}
        github-token: ${{ inputs.github-token }}

    - name: Clean AardexActions
      shell: bash
      run: rm -rf ${{ steps.setup_vars.outputs.AARDEX_ACTIONS_PATH }}